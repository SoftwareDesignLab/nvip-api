/**
 * Copyright 2023 Rochester Institute of Technology (RIT). Developed with
 * government support under contract 70RSAT19CB0000020 awarded by the United
 * States Department of Homeland Security.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.nvip.entities;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.NaturalId;
import org.nvip.util.VulnerabilityUtil;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name="vulnerabilityaggregate")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
public class VulnerabilityAggregate {
	/*
	 * vulnerability ID. If there is a single vulnerability for a CVE, then CVE Id
	 * is also a unique identifier.
	 */
	@Id
	private int vulnId = 0;

	@NaturalId
//	@Column(name = "cve_id", unique = true)
	private String cveId; // CVE ID
	private String description = null; // CVE description text

	@Basic private LocalDateTime createdDate;
	@Basic private LocalDateTime publishedDate; // The date time it is published
	@Basic private LocalDateTime lastModifiedDate; // The most recent crawl date
	@Basic private LocalDateTime fixedDate; // The time the vulnerability was fixed (a patch published?)

	@Column(name = "exists_at_mitre", columnDefinition = "int")
	private boolean existInMitre = true;// this CVE-ID exists in MITRE feeds?
	@Column(name = "exists_at_nvd", columnDefinition = "int")
	private boolean existInNvd = true; // this CVE-ID exists in NVD feeds?

	private String vdoLabels;
	private String vdoLabelConfidences;
	private String vdoNounGroups;

	private String sourceUrls;

	private String baseScores;
	private String impactScores;
	private String cpes;

	@Basic private LocalDateTime exploitPublishDate;
	private String exploitUrl = "N/A";

	@ManyToOne
	@JoinColumn(name="runhistory_id", referencedColumnName = "runhistoryId")
	private RunHistory runhistory; // The date time it is published

	@Transient private Cvss[] cvssScoreList = null;
	@Transient private AffectedProduct[] products = null;
	@Transient private VdoCharacteristic[] vdoList = null;
	@Transient String[] sources = null;
}