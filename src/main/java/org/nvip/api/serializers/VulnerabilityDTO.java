/ **
* Copyright 2021 Rochester Institute of Technology (RIT). Developed with
* government support under contract 70RCSA22C00000008 awarded by the United
* States Department of Homeland Security for Cybersecurity and Infrastructure Security Agency.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the “Software”), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
* /

package org.nvip.api.serializers;

import lombok.Builder;
import lombok.Getter;
import lombok.Setter;
import lombok.Singular;

import java.util.List;

@Getter
@Setter
@Builder
public class VulnerabilityDTO {

    int vulnId;
    String cveId;
    String description;
    DescriptionDTO altDescription;
    String patch;
    String introducedDate;
    String publishedDate;
    String createdDate;
    String lastModifiedDate;
    String fixedDate;
    CvssDTO cvssScore;
    @Builder.Default boolean existInMitre = true;
    @Builder.Default boolean existInNvd = true;
    @Builder.Default Integer timeGapNvd = 0;
    @Builder.Default Integer timeGapMitre = 0;

    @Builder.Default String status = "Under Review";
    @Builder.Default String type = "N/A"; // set vulnerability type (based on impact method?)
    @Builder.Default String discoveredBy = "N/A"; // Use CNA and/or other sources
    @Builder.Default String domain = "N/A"; // assign domain based on CPE
    @Builder.Default String exploitPublishDate = "N/A";
    @Builder.Default String exploitUrl = "N/A";

    @Singular(value = "characteristic")
    List<VdoCharacteristicDTO> vdoList;

    @Singular(value = "source")
    List<RawDescriptionDTO> sources;

    @Singular(value = "product")
    List<ProductDTO> products;

    @Singular(value = "cpe")
    List<String> cpes;

    @Singular(value = "patchCommit")
    List<PatchCommitDTO> patchCommits;

    @Singular(value = "fix")
    List<FixDTO> fixes;

    @Singular(value = "exploit")
    List<ExploitDTO> exploits;

//    @Singular(value = "ssvc")
    SSVCDTO ssvcScores;
}
