package org.nvip.api.serializers;

import org.junit.jupiter.api.Test;

import static org.junit.Assert.assertEquals;

public class ExploitDTOTest {

    @Test
    public void testGettersAndSetters() {
        ExploitDTO exploitDTO = new ExploitDTO(0,"old name","old description", "old example_file","old author","old date_published",false,"old source","old dateCreated",false,"0","old sourceURL");
        exploitDTO.setExploitId(1);
        exploitDTO.setName("new name");
        exploitDTO.setDescription("new description");
        exploitDTO.setExample_file("new example_file");
        exploitDTO.setAuthor("new author");
        exploitDTO.setDatePublished("new date_published");
        exploitDTO.setSource("new source");
        exploitDTO.setDateCreated("new dateCreated");
        exploitDTO.setDownloadFailed(true);
        exploitDTO.setCveId("1");
        exploitDTO.setSourceUrl("new SourceUrl");

        assertEquals(1, exploitDTO.getExploitId());
        assertEquals("new name",   exploitDTO.getName());
        assertEquals("new description", exploitDTO.getDescription());
        assertEquals("new example_file",  exploitDTO.getExample_file());
        assertEquals("new author", exploitDTO.getAuthor());
        assertEquals("new date_published", exploitDTO.getDatePublished());
        assertEquals("1", exploitDTO.getCveId());
        assertEquals("new source", exploitDTO.getSource());
        assertEquals("new SourceUrl", exploitDTO.getSourceUrl());

    }

    @Test
    public void testBuilder() {
        ExploitDTO exploitDTO =  ExploitDTO.builder()
                .exploitId(1)
                .name("new name")
                .description("new description")
                .example_file("new example_file")
                .author("new author")
                .datePublished("new date_published")
                .source("new source")
                .dateCreated("new dateCreated")
                .downloadFailed(true)
                .cveId("1")
                .sourceUrl("new SourceUrl")
                .build();

        assertEquals(1, exploitDTO.getExploitId());
        assertEquals("new name",   exploitDTO.getName());
        assertEquals("new description", exploitDTO.getDescription());
        assertEquals("new example_file",  exploitDTO.getExample_file());
        assertEquals("new author", exploitDTO.getAuthor());
        assertEquals("new date_published", exploitDTO.getDatePublished());
        assertEquals("1", exploitDTO.getCveId());
        assertEquals("new source", exploitDTO.getSource());
        assertEquals("new SourceUrl", exploitDTO.getSourceUrl());
    }
}
